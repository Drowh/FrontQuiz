-- Удаляем старую таблицу, если она существует
DROP TABLE IF EXISTS lessons CASCADE;
DROP TYPE IF EXISTS lesson_category;

-- Создание enum для категорий
CREATE TYPE lesson_category AS ENUM ('HTML', 'CSS', 'JavaScript', 'TypeScript');

-- Создание таблицы уроков
CREATE TABLE lessons (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- Supabase auto-generated ID
    sequence_id INT NOT NULL, -- Your category-specific ID
    category lesson_category NOT NULL,
    title TEXT NOT NULL,
    motivation TEXT NOT NULL,
    blocks JSONB NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT TIMEZONE('utc'::text, NOW()) NOT NULL,

    UNIQUE (category, sequence_id) -- Ensure unique sequence_id within each category
);

-- Создание индексов
CREATE INDEX idx_lessons_category ON lessons(category);
CREATE INDEX idx_lessons_sequence_id ON lessons(sequence_id);
CREATE INDEX idx_lessons_category_sequence_id ON lessons(category, sequence_id);
CREATE INDEX idx_lessons_blocks ON lessons USING GIN (blocks);

-- Создание функции и триггера для автоматического обновления updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = TIMEZONE('utc'::text, NOW());
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_lessons_updated_at
    BEFORE UPDATE ON lessons
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Создание политик безопасности (RLS)
ALTER TABLE lessons ENABLE ROW LEVEL SECURITY;

-- Политика для чтения (все авторизованные и неавторизованные пользователи могут читать)
CREATE POLICY "Allow read access for authenticated and public users" ON lessons
    FOR SELECT
    TO authenticated, public
    USING (true);

-- Политика для записи (только service_role может изменять)
-- Это для скрипта миграции и потенциально админ-панели
CREATE POLICY "Allow write access for service role" ON lessons
    FOR ALL
    TO service_role
    USING (true)
    WITH CHECK (true); 